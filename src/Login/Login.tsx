import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

interface Props {
  setUser: React.Dispatch<React.SetStateAction<{ name: string; room: string } | null>>;
}

const Login: React.FC<Props> = ({ setUser }) => {
  const [name, setName] = useState('');
  const [room, setRoom] = useState('');
  const [error, setError] = useState<string>('');
  const navigate = useNavigate();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã–µ –∏ –Ω–µ —Å–æ—Å—Ç–æ—è—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤
    if (!name.trim() || !room.trim()) {
      setError('–ò–º—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤');
      return;
    }

    setError(''); // –°–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    const user = { name, room };
    localStorage.setItem('user', JSON.stringify(user)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
    setUser(user);

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–∞—Ç–∞
    navigate('/chat');
  };

  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setName(e.target.value);
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏
    if (!e.target.value.trim() || !room.trim()) {
      setError('–ò–º—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤');
    } else {
      setError('');
    }
  };

  const handleRoomChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setRoom(e.target.value);
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
    if (!name.trim() || !e.target.value.trim()) {
      setError('–ò–º—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤');
    } else {
      setError('');
    }
  };

  return (
    <div className='chatLogin'>
      <h2 className='chatHeader'>–í—Ö–æ–¥ –≤ —á–∞—Ç üí¨</h2>
      <div className='horizontal-line'></div>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="–í–∞—à–µ –∏–º—è"
          value={name}
          onChange={handleNameChange}
        />
        <input
          type="text"
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã"
          value={room}
          onChange={handleRoomChange}
        />
        <button type="submit" disabled={!name.trim() || !room.trim()}>–í–æ–π—Ç–∏ –≤ —á–∞—Ç</button>
      </form>
      {error && <p className='loginError'>{error}</p>} {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
    </div>
  );
};

export default Login;
