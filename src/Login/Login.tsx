import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

interface Props {
  onSubmit: (name: string, room: string) => void; // callback –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ App
}

const Login: React.FC<Props> = ({ onSubmit }) => {
  const [name, setName] = useState('');
  const [room, setRoom] = useState('');
  const [error, setError] = useState<string>('');
  const navigate = useNavigate();

  const validateInput = (input: string): boolean => {
    return input.trim().length > 0;
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã–µ –∏ –Ω–µ —Å–æ—Å—Ç–æ—è—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤
    if (!validateInput(name) || !validateInput(room)) {
      setError('–ò–º—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤');
      return;
    }

    setError(''); // –°–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏

    // –í—ã–∑—ã–≤–∞–µ–º onSubmit –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    onSubmit(name, room);
    navigate('/chat');
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>, setter: React.Dispatch<React.SetStateAction<string>>) => {
    const value = e.target.value;
    setter(value);
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –∏ –∫–æ–º–Ω–∞—Ç—ã
    if (!validateInput(value)) {
      setError('–ò–º—è –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏ –∏–ª–∏ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤');
    } else {
      setError('');
    }
  };

  return (
    <div className='chatLogin'>
      <h2 className='chatHeader'>–í—Ö–æ–¥ –≤ —á–∞—Ç üí¨</h2>
      <div className='horizontal-line'></div>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="–í–∞—à–µ –∏–º—è"
          value={name}
          onChange={(e) => handleInputChange(e, setName)}
        />
        <input
          type="text"
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã"
          value={room}
          onChange={(e) => handleInputChange(e, setRoom)}
        />
        <button type="submit" disabled={!name.trim() || !room.trim()}>–í–æ–π—Ç–∏ –≤ —á–∞—Ç</button>
      </form>
      {error && <p className='loginError'>{error}</p>} {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
    </div>
  );
};

export default Login;
